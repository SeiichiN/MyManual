無名関数

これは、p105のコールバック関数の例である。

2つの引数を足して、その結果を返す関数
===========================================
function plus($a, $b) {
    return $a + $b;
}
===========================================

2つの引数をかけて、その結果を返す関数
===========================================
function kakeru($a, $b) {
    return $a * $b;
}
===========================================

2つの数と関数を引数にとり、その関数で２つの
引数を処理して、その結果を表示する関数
===========================================
function dousuru($x, $y, callable $f){
    print $f($x, $y);
}
===========================================

コールバック関数では、ここで以下のようにした。
===========================================
dosuru(3, 5, "plus");
あるいは、
dosuru(3, 5, "kakeru");
===========================================

このとき、たとえば dosuru(3, 5, "plus") なら、
"plus"のところに plus関数の本体を記述すること
ができる。
以下のようになる。
===========================================
dosuru(2, 5, function($a, $b){
    return $a + $b;
});
===========================================

kakeru なら以下のようになる。
===========================================
dosuru(3, 5, function($a, $b) {
	return $a * $b;
});
===========================================

このように、functionだけで、関数名のない関数を
「無名関数」という。

メリット。
1) dosuru関数と、たとえばplus関数の位置が離れ
ているとわかりにくい。
2) 関数の名前を考えなくてよい。

無名関数は、使い捨て関数である。
